package br.com.example.gamedealsapi.gui;

import br.com.example.gamedealsapi.client.CheapSharkClient;
import br.com.example.gamedealsapi.gui.handlers.HandleListeners;
import br.com.example.gamedealsapi.gui.handlers.HandleUseCase;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.springframework.stereotype.Component;

import javax.swing.*;
import javax.swing.plaf.nimbus.NimbusLookAndFeel;
import java.awt.*;
import java.net.URL;

@Component
public class GameDeals extends JFrame {

    private JComboBox storeListField;
    private JPanel mainPanel;
    private JList gamesListField;
    private JScrollPane gameScrollPane;
    private JFormattedTextField gameTitle;
    private JButton searchButton;
    private JLabel storeLabel;
    private JTextPane dealsTextPane;
    private JSpinner pageFormattedTextField;
    private JCheckBox onSaleCheckbox;
    private JCheckBox sortByCheapestCheckBox;
    private JButton goToPageButton;
    private JButton viewDealsButton;

    public GameDeals(CheapSharkClient cheapSharkClient) {
        HandleUseCase handleUseCase = new HandleUseCase(cheapSharkClient);
        HandleListeners handleListeners = new HandleListeners(handleUseCase);
        $$$setupUI$$$();
        handleUseCase.listStores(storeListField);
        handleListeners.addListeners(
                storeListField, gamesListField, searchButton,
                gameTitle, onSaleCheckbox, sortByCheapestCheckBox,
                pageFormattedTextField, goToPageButton,
                dealsTextPane, viewDealsButton

        );
        this.setPanelSettings();
    }

    private void setPanelSettings() {
        this.setTitle("Game Deals");
        this.setIconImage(iconImage());
        this.setMinimumSize(new Dimension(1024, 768));
        this.setContentPane(mainPanel);
        this.setVisible(true);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
    }

    private Image iconImage() {
        URL imgUrl = this.getClass().getResource("/icons/gameboyico.png");
        Image img = new ImageIcon(imgUrl).getImage();
        return img;
    }

    public static void applyLookAndFeel() {
        try {
            UIManager.setLookAndFeel(new NimbusLookAndFeel());
        } catch (UnsupportedLookAndFeelException e) {
            throw new RuntimeException(e);
        }
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(3, 8, new Insets(0, 0, 0, 0), -1, -1));
        gameScrollPane = new JScrollPane();
        mainPanel.add(gameScrollPane, new GridConstraints(1, 0, 1, 5, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        gamesListField = new JList();
        gameScrollPane.setViewportView(gamesListField);
        searchButton = new JButton();
        searchButton.setText("Search");
        mainPanel.add(searchButton, new GridConstraints(0, 7, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        gameTitle = new JFormattedTextField();
        gameTitle.setInheritsPopupMenu(false);
        gameTitle.setMargin(new Insets(2, 6, 2, 6));
        gameTitle.setText("");
        gameTitle.setToolTipText("Game title");
        mainPanel.add(gameTitle, new GridConstraints(0, 6, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(150, -1), null, new Dimension(150, -1), 1, false));
        storeListField = new JComboBox();
        storeListField.setAlignmentX(0.0f);
        mainPanel.add(storeListField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_SOUTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(panel1, new GridConstraints(2, 1, 1, 4, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_VERTICAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        pageFormattedTextField.setAutoscrolls(true);
        pageFormattedTextField.setEnabled(true);
        panel1.add(pageFormattedTextField, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(50, -1), null, 0, false));
        goToPageButton = new JButton();
        goToPageButton.setText("Go to page");
        panel1.add(goToPageButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        onSaleCheckbox = new JCheckBox();
        onSaleCheckbox.setMargin(new Insets(2, 2, 2, 2));
        onSaleCheckbox.setText("On Sale");
        mainPanel.add(onSaleCheckbox, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        storeLabel = new JLabel();
        storeLabel.setHorizontalAlignment(4);
        storeLabel.setHorizontalTextPosition(11);
        storeLabel.setText("Store");
        mainPanel.add(storeLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        sortByCheapestCheckBox = new JCheckBox();
        sortByCheapestCheckBox.setText("Sort By Cheapest");
        mainPanel.add(sortByCheapestCheckBox, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        mainPanel.add(scrollPane1, new GridConstraints(1, 6, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        dealsTextPane = new JTextPane();
        dealsTextPane.setEditable(false);
        scrollPane1.setViewportView(dealsTextPane);
        viewDealsButton = new JButton();
        viewDealsButton.setEnabled(false);
        viewDealsButton.setText("View Deals");
        mainPanel.add(viewDealsButton, new GridConstraints(1, 5, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        storeLabel.setLabelFor(storeListField);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

    private void createUIComponents() {
        SpinnerModel sm = new SpinnerNumberModel(0, 0, 50, 1);
        pageFormattedTextField = new JSpinner(sm);
    }
}
